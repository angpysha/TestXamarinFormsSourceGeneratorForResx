using System.Text;
using System.Xml.Linq;

namespace Test.Generators;

internal static class ResourceManagerClassGenerator
{
    public static string GenerateSource(string nameSpace, string className, string content)
    {
        var stringBuilder = new StringBuilder();
        stringBuilder.AppendLine(
            $$"""
            //------------------------------------------------------------------------------
            // <auto-generated>
            //     This code was generated by source generator.
            //
            //     Changes to this file may cause incorrect behavior and will be lost if
            //     the code is regenerated.
            // </auto-generated>
            //------------------------------------------------------------------------------
            using System;
            using System.Globalization;
            using System.Resources;
            using System.Reflection;
            using System.Resources;

            namespace {{nameSpace}}
            {
                public class {{className}} 
                {
                    private static ResourceManager? resourceManager;
                    private static CultureInfo resourceCulture;

                    public static ResourceManager ResourceManager 
                    {
                        get 
                        {
                            if (object.ReferenceEquals(resourceManager, null)) 
                            {
                                var temp = new ResourceManager("{{nameSpace}}.{{className}}", typeof({{className}}).Assembly);
                                resourceManager = temp;
                            }
                        
                        return resourceManager;
                        }
                    }
            """);

        var xDoc = XDocument.Load(content);


        if (xDoc.Root != null)
        {
            foreach (var element in xDoc.Root.Descendants("data"))
            {
                if (element?.Attribute("name") is not null)
                {
                    var name = element.Attribute("name")!.Value;
                    stringBuilder.AppendLine(string.Empty);
                    stringBuilder.AppendLine(
                        $$"""
                                public static string {{name}}
                                {
                                    get { return resourceManager.GetString("{{name}}", resourceCulture); }
                                }
                        """);
                }
            }
        }

        stringBuilder.AppendLine("    }");
        stringBuilder.AppendLine("}");
        return stringBuilder.ToString();
    }
}
